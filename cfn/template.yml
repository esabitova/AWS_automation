AWSTemplateFormatVersion: "2010-09-09"

Transform: "AWS::Serverless-2016-10-31"

Description: "Create SQS Standard Queue and Lambda Function"

Resources:
  QueueForLambda:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "SQSQueueForLambda"

#TODO: learn more about roles. Think about sqs:* - may be it's not correct for challenge
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: LambdaFunctionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:*
                Resource: '*'


  LambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn: QueueForLambda
    Properties:
      Handler: index.handler
      Runtime: python3.8
      Role: !GetAtt LambdaFunctionRole.Arn
      #  TODO    CodeUri: lambda/.
      Code:
        ZipFile: |
          import boto3
          from datetime import datetime

          sqs = boto3.client('sqs')
          queue_url = sqs.get_queue_url(QueueName="SQSQueueForLambda")
          print("sqsURL" + str(queue_url))
          date = datetime.now().strftime("%d/%m/%Y %H:%M:%S")

          response = sqs.send_message(
              QueueUrl=queue_url['QueueUrl'],
              MessageBody=date
          )
          print(date)


          def handler(event, context):
              return {
                  'body': event
              }


#TODO: this part may be should be deleted
Outputs:
  QueueURL:
    Description: "URL of new Amazon SQS Queue"
    Value:
      Ref: "QueueForLambda"

  QueueName:
    Description: "Name new Amazon SQS Queue"
    Value:
      Fn::GetAtt:
        - "QueueForLambda"
        - "QueueName"


