AWSTemplateFormatVersion: "2010-09-09"

Transform: "AWS::Serverless-2016-10-31"

Description: "Create SQS Standard Queue and Lambda Function"

Resources:
  QueueForLambda:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "SQSQueueForLambda"

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: LambdaFunctionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                 - sqs:SendMessage
                 - sqs:GetQueueUrl
                Resource: '*'


  LambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn: QueueForLambda
    Properties:
      FunctionName: "SendMessagesLambda"
      Handler: index.handler
      Runtime: python3.8
      Timeout: 25
      Role: !GetAtt LambdaFunctionRole.Arn
      #  TODO    CodeUri: lambda/.
      Code:
        ZipFile: |
          import boto3
          from datetime import datetime

          sqs = boto3.client('sqs')
          queue_url = sqs.get_queue_url(QueueName="SQSQueueForLambda")


          def handler(event, context):
              date = datetime.utcnow().now().strftime("%d/%m/%Y %H:%M:%S.%f")
              response = sqs.send_message(
                  QueueUrl=queue_url['QueueUrl'],
                  MessageBody=date
              )


#TODO: this part may be should be deleted
Outputs:
  QueueURL:
    Description: "URL of new Amazon SQS Queue"
    Value:
      Ref: "QueueForLambda"

  QueueName:
    Description: "Name new Amazon SQS Queue"
    Value:
      Fn::GetAtt:
        - "QueueForLambda"
        - "QueueName"


